#ifndef GPIO_PRIVATE_H_
#define GPIO_PRIVATE_H_


typedef enum
{
	IN_ANALOG=0x00,
	IN_FLOATING=0x01,
	IN_PULL_UP_OR_DOWN=0x02,
	OUT_PUSH_PULL=0x00,
	OUT_OPEN_DRAIN=0x01,
	AF_PUSH_PULL=0x02,
	AF_OPEN_DRAIN=0x03
}CNF_CFGs;

typedef enum
{
	INPUT_MODE=0x00,
	OUTPUT_10MHZ=0x01,
	OUTPUT_2MHZ=0x02,
	OUTPUT_50MHZ=0x03,



}MOD_CFGs;

typedef struct
{
	MOD_CFGs MOD:2;
	CNF_CFGs CNF:2;
}GPIO_bit_CFG;

typedef struct
{
	GPIO_bit_CFG bit0;
	GPIO_bit_CFG bit1;
	GPIO_bit_CFG bit2;
	GPIO_bit_CFG bit3;
	GPIO_bit_CFG bit4;
	GPIO_bit_CFG bit5;
	GPIO_bit_CFG bit6;
	GPIO_bit_CFG bit7;


}GPIO_PORT_CRL;

typedef struct
{
	GPIO_bit_CFG bit8;
	GPIO_bit_CFG bit9;
	GPIO_bit_CFG bit10;
	GPIO_bit_CFG bit11;
	GPIO_bit_CFG bit12;
	GPIO_bit_CFG bit13;
	GPIO_bit_CFG bit14;
	GPIO_bit_CFG bit15;


}GPIO_PORT_CRH;


typedef struct
{

	u32 CRL ;
	u32 CRH;
	u32 IDR;
	u32 ODR;
	u32 BSRR;
	u32 BRR;
	u32 LCKR;
}GPIO;


#define INPUT_ANALOG 				00
#define INPUT_FLOATING 				01
#define INPUT_PULL_UP_OR_DOWN		10

#define OUTPUT_PUSH_PULL			00
#define OUTPUT_OPEN_DRAIN			01
#define AF_PUSH_PULL				10
#define AF_OPEN_DRAIN				11

#define INPUT_MODE					00
#define OUTPUT_10MHZ				01
#define OUTPUT_2MHZ					10
#define OUTPUT_50MHZ				11

#define PIN_DIR_CONC(CFG,MODE) 			PIN_DIR_CONC_HELPER(CFG,MODE)
#define PIN_DIR_CONC_HELPER(CFG,MODE)	CFG##MODE
/*PORTA bits*/
#define PORTA_BIT0	 	PIN_DIR_CONC(PORTA_CFG0,PORTA_MODE0)
#define PORTA_BIT1		PIN_DIR_CONC(PORTA_CFG1,PORTA_MODE1)
#define PORTA_BIT2 		PIN_DIR_CONC(PORTA_CFG2,PORTA_MODE2)
#define PORTA_BIT3 		PIN_DIR_CONC(PORTA_CFG3,PORTA_MODE3)
#define PORTA_BIT4 		PIN_DIR_CONC(PORTA_CFG4,PORTA_MODE4)
#define PORTA_BIT5 		PIN_DIR_CONC(PORTA_CFG5,PORTA_MODE5)
#define PORTA_BIT6 		PIN_DIR_CONC(PORTA_CFG6,PORTA_MODE6)
#define PORTA_BIT7 		PIN_DIR_CONC(PORTA_CFG7,PORTA_MODE7)
#define PORTA_BIT8 		PIN_DIR_CONC(PORTA_CFG8,PORTA_MODE8)
#define PORTA_BIT9 		PIN_DIR_CONC(PORTA_CFG9,PORTA_MODE9)
#define PORTA_BIT10 	PIN_DIR_CONC(PORTA_CFG10,PORTA_MODE10)
#define PORTA_BIT11 	PIN_DIR_CONC(PORTA_CFG11,PORTA_MODE11)
#define PORTA_BIT12		PIN_DIR_CONC(PORTA_CFG12,PORTA_MODE12)
#define PORTA_BIT13 	PIN_DIR_CONC(PORTA_CFG13,PORTA_MODE13)
#define PORTA_BIT14 	PIN_DIR_CONC(PORTA_CFG14,PORTA_MODE14)
#define PORTA_BIT15 	PIN_DIR_CONC(PORTA_CFG15,PORTA_MODE15)


/*PORTB bits*/
#define PORTB_BIT0	 	PIN_DIR_CONC(PORTB_CFG0,PORTB_MODE0)
#define PORTB_BIT1		PIN_DIR_CONC(PORTB_CFG1,PORTB_MODE1)
#define PORTB_BIT2 		PIN_DIR_CONC(PORTB_CFG2,PORTB_MODE2)
#define PORTB_BIT3 		PIN_DIR_CONC(PORTB_CFG3,PORTB_MODE3)
#define PORTB_BIT4 		PIN_DIR_CONC(PORTB_CFG4,PORTB_MODE4)
#define PORTB_BIT5 		PIN_DIR_CONC(PORTB_CFG5,PORTB_MODE5)
#define PORTB_BIT6 		PIN_DIR_CONC(PORTB_CFG6,PORTB_MODE6)
#define PORTB_BIT7 		PIN_DIR_CONC(PORTB_CFG7,PORTB_MODE7)
#define PORTB_BIT8 		PIN_DIR_CONC(PORTB_CFG8,PORTB_MODE8)
#define PORTB_BIT9 		PIN_DIR_CONC(PORTB_CFG9,PORTB_MODE9)
#define PORTB_BIT10 	PIN_DIR_CONC(PORTB_CFG10,PORTB_MODE10)
#define PORTB_BIT11 	PIN_DIR_CONC(PORTB_CFG11,PORTB_MODE11)
#define PORTB_BIT12		PIN_DIR_CONC(PORTB_CFG12,PORTB_MODE12)
#define PORTB_BIT13 	PIN_DIR_CONC(PORTB_CFG13,PORTB_MODE13)
#define PORTB_BIT14 	PIN_DIR_CONC(PORTB_CFG14,PORTB_MODE14)
#define PORTB_BIT15 	PIN_DIR_CONC(PORTB_CFG15,PORTB_MODE15)

#define PORT_CONC(P7,P6,P5,P4,P3,P2,P1,P0)            PORT_CONC_HELPER(P7,P6,P5,P4,P3,P2,P1,P0)

#define PORT_CONC_HELPER(P7,P6,P5,P4,P3,P2,P1,P0)     (0b##P7##P6##P5##P4##P3##P2##P1##P0)

#define PORTA_CRL_INIT PORT_CONC(PORTA_BIT7,PORTA_BIT6,PORTA_BIT5,PORTA_BIT4,PORTA_BIT3,PORTA_BIT2,PORTA_BIT1,PORTA_BIT0)
#define PORTA_CRH_INIT PORT_CONC(PORTA_BIT15,PORTA_BIT14,PORTA_BIT13,PORTA_BIT12,PORTA_BIT11,PORTA_BIT10,PORTA_BIT9,PORTA_BIT8)


#define PORTB_CRL_INIT PORT_CONC(PORTB_BIT7,PORTB_BIT6,PORTB_BIT5,PORTB_BIT4,PORTB_BIT3,PORTB_BIT2,PORTB_BIT1,PORTB_BIT0)
#define PORTB_CRH_INIT PORT_CONC(PORTB_BIT15,PORTB_BIT14,PORTB_BIT13,PORTB_BIT12,PORTB_BIT11,PORTB_BIT10,PORTB_BIT9,PORTB_BIT8)


#endif
